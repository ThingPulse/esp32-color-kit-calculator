; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
build_flags =
  -D LV_CONF_INCLUDE_SIMPLE
  -D LV_DEMO_CONF_INCLUDE_SIMPLE
  -D LV_USE_PERF_MONITOR=1
  -D LV_COLOR_DEPTH=16
  -D LV_COLOR_16_SWAP=1
  -D LV_CONF_INCLUDE_SIMPLE
  ;-DLV_USE_DEMO_BENCHMARK
  ;-DLV_USE_DEMO_WIDGETS
  ;-DLV_USE_DEMO_KEYPAD_AND_ENCODER
  ;-DLV_USE_DEMO_MUSIC
  ;-DLV_USE_DEMO_PRINTER
  ;-DLV_USE_DEMO_STRESS
  -D LV_FONT_MONTSERRAT_12=1
  -D LV_FONT_MONTSERRAT_14=1
  -D LV_FONT_MONTSERRAT_16=1
  -D LV_FONT_MONTSERRAT_22=1
  -D LV_FONT_MONTSERRAT_24=1
  -D LV_FONT_MONTSERRAT_36=1
  -D LV_FONT_MONTSERRAT_40=1
lib_deps =  lvgl/lvgl@^8.4.0
build_src_filter =
  +<*>
  +<../hal/${PIOENV}>
  +<../.pio/libdeps/${PIOENV}/lvgl/demos>

[env:mac_arm64]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  -lSDL2
  -D NATIVE
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D SDL_HOR_RES=320
  -D SDL_VER_RES=480  
  -D SDL_ZOOM=1.5
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
  -D LV_CONF_SKIP
  -arch arm64
  ; LVGL memory options, setup for the demo to run properly
  -D CURRENT_LOG_LEVEL=LOG_LEVEL_VERBOSE
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"
  -I /opt/homebrew/Cellar/sdl2/2.30.1/include
  -L /opt/homebrew/Cellar/sdl2/2.30.1/lib
  -I hal
build_src_filter =
	+<*>
	+<../hal/mac_arm64/*>
lib_deps =
  ${env.lib_deps}
  sdl2
  lvgl/lv_drivers@8.3.0
  bblanchon/ArduinoJson@^7.2.0

[env:color-kit-grande]
platform = espressif32@~6.5.0
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
board_upload.flash_size = 4MB
board_build.partitions = no_ota.csv

board_upload.use_1200bps_touch = yes
board_upload.wait_for_upload_port = yes
board_upload.require_upload_port = yes

build_flags =
  ${env.build_flags}
  -Isrc/
  -I hal
  -D CORE_DEBUG_LEVEL=4
  -D ARDUINO_USB_CDC_ON_BOOT=1
  -D ARDUINO_USB_MODE=1
  -D LV_TICK_CUSTOM=1
  -D LV_DISP_DEF_REFR_PERIOD=10
  -D AUTO_SLEEP_MILLIS=180000
  -D COLOR_KIT_GRANDE
build_src_filter =
	+<*>
	+<../hal/ckg-pro/*>
lib_deps =
  ${env.lib_deps}
  lovyan03/LovyanGFX
  lennarthennigs/Button2@^2.3.1
  Wire
  sparkfun/SparkFun MAX1704x Fuel Gauge Arduino Library@^1.0.4
  bblanchon/ArduinoJson@^7.2.0

[env:color-kit-pro]
platform = espressif32@~6.5.0
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
board_upload.flash_size = 4MB
board_build.partitions = no_ota.csv

board_upload.use_1200bps_touch = yes
board_upload.wait_for_upload_port = yes
board_upload.require_upload_port = yes

build_flags =
  ${env.build_flags}
  -Isrc/
  -I hal
  -D CORE_DEBUG_LEVEL=4
  -D ARDUINO_USB_CDC_ON_BOOT=1
  -D ARDUINO_USB_MODE=1
  -D LV_TICK_CUSTOM=1
  -D LV_DISP_DEF_REFR_PERIOD=10
  -D AUTO_SLEEP_MILLIS=180000
  -D COLOR_KIT_PRO
build_src_filter =
	+<*>
	+<../hal/ckg-pro/*>
lib_deps =
  ${env.lib_deps}
  lovyan03/LovyanGFX
  lennarthennigs/Button2@^2.3.1
  Wire
  sparkfun/SparkFun MAX1704x Fuel Gauge Arduino Library@^1.0.4
  bblanchon/ArduinoJson@^7.2.0

